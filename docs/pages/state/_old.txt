Krmx State provides three fundamental models that can be used to build Krmx applications. A models describe how shared state can be represented on server and client and how changes to that state can be made from clients.

The three models are: Value, Stream, and View.

Atom Model (atom/)
* supports a single number, string, or boolean as the atom
* each client can update the atom (atom/set)
* the server broadcasts the updated atom to each client (atom/set)
* each client sees the latest broadcast value for an atom

Stream Model (stream/)
* supports a state derived from a stream of JSON serializable events
* when a client joins it receives all previously send events in the stream (stream/history)
* each client can append events to the stream (stream/append)
* the server validates appended events and broadcasts the valid events to each client (stream/append)
* each client sees the latest derived state based on the stream of events
* each client keeps track of the events it has send but have not yet been verified by the server to create an optimistic state -- the server will send a rejection back to a client to allow a client to remove a invalid event from its optimistic stream (stream/invalidate)

Projection Model (projection/)
* on the server side supports an internal and private state
* on the client side supports a projection on the private state that is updated through delta on that projection after state changes
* when a client joins it gets its full projection send as a JSON object (projection/set)
* each client can send actions to the server (projection/action)
* the server validates actions and computes the new projection for each client and sends the delta from previous to new projection (projection/delta)
* each client keeps track of its optimistic state by applying any actions it sends using a optimistic handler immediately to its own projection locally -- if the server receives an action that is invalid, or that adds no delta, this action should still be invalidated from the optimistic actions for that client, the server sends a message for this (projection/invalidate)
